# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- ESS_GUI

pool:
  vmImage: 'ubuntu-latest'

stages:
  #- template: templates/code_quality_checks.yml

  - stage: 'build_and_test'
    displayName: 'Conda Package Build and Unit Tests'

    jobs:
      - job: 'linux'
        displayName: 'Linux'
        timeoutInMinutes: 60
        strategy:
          matrix:
            Python36:
              PYTHON_VERSION: '3.6'
            Python37:
              PYTHON_VERSION: '3.7'
        pool:
          vmImage: 'ubuntu-18.04'
        variables:
          - group: tokens
        steps:
          - checkout: self
            submodules: true
          - bash: |
              echo "##vso[task.prependpath]$CONDA/bin"
              echo "##vso[task.setvariable variable=conda_dir]$CONDA"
            displayName: 'Configure Conda directories'
          - bash: |
              set -ex
              conda --version
              conda install --yes anaconda-client conda-build
              conda config --set always_yes yes --set changeps1 no
            displayName: 'Conda configuration'
          - bash: |
              conda build --token "$ANACONDA_TOKEN" --channel conda-forge --label dev --python="$PYTHON_VERSION" ./conda
            env:
              ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'Package build'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(conda_dir)/conda-bld/linux-64"
              ArtifactName: 'linux-64'
            displayName: 'Publish Conda package artefacts'
